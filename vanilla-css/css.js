// Generated by CoffeeScript 1.7.1
(function() {
  var css,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  css = (function() {
    var d, dasherize, getPrefixedStyle, unitless;
    d = document.createElement("div");
    unitless = ["column-count", "fill-opacity", "font-weight", "line-height", "opacity", "orphans", "widows", "z-index", "zoom"];
    dasherize = function(str) {
      return str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    };
    getPrefixedStyle = function(style) {
      var moz, ms, o, webkit;
      webkit = "-webkit-" + style;
      moz = "-moz-" + style;
      ms = "-ms-" + style;
      o = "-o-" + style;
      if (d.style[style] != null) {
        return style;
      } else if (d.style[webkit] != null) {
        return webkit;
      } else if (d.style[moz] != null) {
        return moz;
      } else if (d.style[ms] != null) {
        return ms;
      } else if (d.style[o] != null) {
        return o;
      } else {
        return style;
      }
    };
    return function(el, obj) {
      var key, prop, val;
      if (typeof obj === "string") {
        prop = getPrefixedStyle(dasherize(obj));
        el = el[0] || el;
        return el.style[prop] || getComputedStyle(el)[prop];
      }
      if (el.length != null) {
        return [].forEach.call(el, function(n) {
          return css(n, obj);
        });
      } else {
        for (key in obj) {
          val = obj[key];
          key = dasherize(key);
          if (typeof val === "number" && __indexOf.call(unitless, key) < 0) {
            val += "px";
          }
          el.style[getPrefixedStyle(key)] = val;
        }
      }
    };
  })();

}).call(this);
