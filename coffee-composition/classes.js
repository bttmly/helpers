// Generated by CoffeeScript 1.7.1
(function() {
  var A, B, C, D, F, G, Y, Z;

  A = (function() {
    function A() {}

    A.prototype.aMethod = function() {
      console.log("aMethod from class A");
      return console.log("this instance of A === " + (this instanceof A));
    };

    return A;

  })();

  B = (function() {
    function B() {}

    B.prototype.bMethod = function() {
      console.log("bMethod from class B");
      return console.log("this instance of B === " + (this instanceof B));
    };

    return B;

  })();

  C = (function() {
    function C() {
      this.a = new A();
      this.b = new B();
    }

    compose({
      composeTo: C,
      composeFrom: {
        a: A,
        b: B
      }
    }, bindMethods(true));

    return C;

  })();

  D = (function() {
    function D() {
      this.a = new A();
      this.b = new B();
    }

    compose({
      composeTo: D,
      composeFrom: {
        a: A,
        b: B
      }
    });

    return D;

  })();

  F = (function() {
    function F() {
      this.e = document.createElement("div");
    }

    compose({
      composeTo: F,
      composeFrom: {
        e: Element
      },
      bindMethods: true
    });

    return F;

  })();

  G = (function() {
    function G() {
      this.e = document.createElement("div");
    }

    compose({
      composeTo: G,
      composeFrom: {
        e: Element
      }
    });

    return G;

  })();

  Y = (function() {
    function Y() {}

    Y.prototype.runFn = function(fn) {
      return fn();
    };

    return Y;

  })();

  Z = (function() {
    function Z() {
      this.y = new Y();
    }

    compose({
      composeTo: Z,
      composeFrom: {
        y: Y
      },
      bindMethods: true,
      bindCallbacks: true
    });

    return Z;

  })();

  this.A = A;

  this.B = B;

  this.C = C;

  this.D = D;

  this.F = F;

  this.G = G;

  this.Y = Y;

  this.Z = Z;

}).call(this);
